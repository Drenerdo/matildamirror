{
  "author": {
    "name": "Elio Capella SÃ¡nchez",
    "email": "eliocapella@gmail.com",
    "url": "www.eliocapella.com"
  },
  "name": "envy",
  "description": "Handle your project environment properties from a simple .json file.",
  "version": "0.1.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/eliOcs/node-envy.git"
  },
  "main": "envy",
  "scripts": {
    "test": "vows"
  },
  "dependencies": {},
  "devDependencies": {
    "vows": "0.7.0"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "gitHead": "78143249339f6d214de0257e9e40801af94da056",
  "readme": "# ENVy [![build status](https://secure.travis-ci.org/eliOcs/node-envy.png)](http://travis-ci.org/eliOcs/node-envy)\n\nHandle your project environment properties from a simple .json file. Determine\n multiple environments and inherit properties between them.\n\n## Installation\n\nTo install simply use the node package manager (NPM):\n\n    [sudo] npm install envy\n\n## Motivation\n\nThere is no standard way of managing environment properties per project in \nnode. With envy you can easily meet this need.\n\n## Typical use case \n\n### Define your configuration file\n\nCreate a .json file on your project root (where the package.json is located) \nthis file is normally named `config.json`, for example:\n\n    {\n      \"environment\": \"development\",\n\n      \"development\": {\n        \"test\": \"Development property\"\n      },\n\n      \"production\": {\n        \"test\": \"Production property\"\n      }\n    }\n\n### Use your properties in your program\n\nThe envy module is very easy to use, it only has function that loads the \nconfiguration file.\nCalling the `load` function with no parameters will try to load `./config.json`:\n\n    var config = require(\"envy\").load();\n\nIf your configuration file is named differently you can indicate it, remember \nfile paths are relative to your project root and the file extension may be \nomitted:\n\n    var config = require(\"envy\").load(\"./some-dir/filename\");\n\nor:\n\n    var config = require(\"envy\").load(\"./some-dir/filename.json\");\n\n### Execute your application\n\nImagine we have the following node application:\n\n    var config = require(\"envy\").load(\"./some-dir/filename.json\");\n    console.log(config.test);\n\nExecuting your application without setting the `NODE_ENV` environment \nvariable will execute the program using the default properties in this case \nthe `\"development\"` set will be selected.\n\n    $> node your-app.js\n    $> Development property\n    $>\n\nIf you want to select another environment you will need to set the \n`NODE_ENV` environment variable:\n\n    $> NODE_ENV=production node your-app.js\n    $> Production property\n    $>\n\n## File format\n\nThe file defines what is your default environment from which all other \nenvironments will inherit their properties.\n\nIn the following example the `\"development\"` environment will be selected \nby default. _Selecting an environment in your configuration file will also make\n its properties to be inherited in the other environments._  \nContinuing with the example, the `\"production\"` environment will also be \nconfigured to use the port `3000`, but its database URL will be \n`\"mongodb://localhost/prod-app\"` instead of \n`\"mongodb://localhost/dev-app\"`.\n\n    {\n      \"environment\": \"development\",\n\n      \"development\": {\n        \"port\": 3000,\n        \"database\": {\n          \"url\": \"mongodb://localhost/dev-app\"\n        }\n      },\n\n      \"production\": {\n        \"database\": {\n          \"url\": \"mongodb://localhost/prod-app\"\n        }\n      }\n    }\n\n## API\n\n### envy.load(filename)\n\nLoads the properties defined on the provided file and returns the an object with\n the properties.  \nIf the `NODE_ENV` environment variable hasn\"t been defined then the \nselected set of properties will be defined by the `\"environment\"` property\n of the .json file.  \n\n* If no filename is provided, `config.json` will be loaded\n* The filename is relative to the execution script\n* The file extension can be omitted\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/eliOcs/node-envy/issues"
  },
  "homepage": "https://github.com/eliOcs/node-envy#readme",
  "_id": "envy@0.1.1",
  "_shasum": "2de74ebff433dd6d7a6f3ddca8b3684f568e4b5c",
  "_from": "git://github.com/geraldbaeck/node-envy.git",
  "_resolved": "git://github.com/geraldbaeck/node-envy.git#78143249339f6d214de0257e9e40801af94da056"
}
